import {
  connectDatabase,
  insertDocument,
  getAllDocuments,
} from "../../../helpers/db-util";

async function handler(req, res) {
  // req.query returns the contents after /api/comments as a javascript object.
  const eventId = req.query.eventId;

  let client;
  try {
    // Declare the connection instance.
    client = await connectDatabase();
  } catch (error) {
    res.status(500).json({ message: "Connecting to database failed." });
    return;
  }

  if (req.method === "POST") {
    const requestBodyJson = JSON.parse(req.body);
    const { email, name, text } = requestBodyJson;
    // Add server side validation.
    if (
      !email.includes("@") ||
      !name ||
      name.trim() === "" ||
      !text ||
      text.trim() === ""
    ) {
      res.status(422).json({ message: "Invalid input." });
      client.close();
      return;
    }

    const newComment = {
      email,
      name,
      text,
      eventId,
    };

    let result;

    try {
      // Declare the database instance.
      result = await insertDocument(client, "comments", newComment);
      // Insert the id which was generated by Mongo to the comment.
      newComment._id = result.insertedId;
    } catch (error) {
      res.status(500).json({ message: "Inserting comment faild." });
    }

    res.status(201).json({ message: "Added comment.", comment: newComment });
  }

  if (req.method === "GET") {
    try {
      const documents = await getAllDocuments(
        client,
        "comments",
        { _id: -1 },
        { eventId: eventId }
      );
      res.status(200).json({ comments: documents });
    } catch (error) {
      res.status(500).json({ message: "Getting comments failed" });
    }

  }

  // Close the connection.
  client.close();
}

export default handler;
